<?php

/**
 * This is the model base class for the table "store".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Store".
 *
 * Columns in table "store" available as properties of the model,
 * followed by relations of table "store" available as properties of the model.
 *
 * @property integer $store_id
 * @property integer $manager_staff_id
 * @property integer $address_id
 * @property string $last_update
 *
 * @property Customer[] $customers
 * @property Inventory[] $inventories
 * @property Staff[] $staffs
 * @property Staff $managerStaff
 * @property Address $address
 */
abstract class BaseStore extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'store';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Store|Stores', $n);
	}

	public static function representingColumn() {
		return 'last_update';
	}

	public function rules() {
		return array(
			array('manager_staff_id, address_id, last_update', 'required'),
			array('manager_staff_id, address_id', 'numerical', 'integerOnly'=>true),
			array('store_id, manager_staff_id, address_id, last_update', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'customers' => array(self::HAS_MANY, 'Customer', 'store_id'),
			'inventories' => array(self::HAS_MANY, 'Inventory', 'store_id'),
			'staffs' => array(self::HAS_MANY, 'Staff', 'store_id'),
			'managerStaff' => array(self::BELONGS_TO, 'Staff', 'manager_staff_id'),
			'address' => array(self::BELONGS_TO, 'Address', 'address_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'store_id' => Yii::t('app', 'Store'),
			'manager_staff_id' => null,
			'address_id' => null,
			'last_update' => Yii::t('app', 'Last Update'),
			'customers' => null,
			'inventories' => null,
			'staffs' => null,
			'managerStaff' => null,
			'address' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('store_id', $this->store_id);
		$criteria->compare('manager_staff_id', $this->manager_staff_id);
		$criteria->compare('address_id', $this->address_id);
		$criteria->compare('last_update', $this->last_update, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}