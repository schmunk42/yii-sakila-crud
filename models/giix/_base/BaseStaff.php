<?php

/**
 * This is the model base class for the table "staff".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Staff".
 *
 * Columns in table "staff" available as properties of the model,
 * followed by relations of table "staff" available as properties of the model.
 *
 * @property integer $staff_id
 * @property string $first_name
 * @property string $last_name
 * @property integer $address_id
 * @property string $picture
 * @property string $email
 * @property integer $store_id
 * @property integer $active
 * @property string $username
 * @property string $password
 * @property string $last_update
 *
 * @property Payment[] $payments
 * @property Rental[] $rentals
 * @property Store $store
 * @property Address $address
 * @property Store[] $stores
 */
abstract class BaseStaff extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'staff';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Staff|Staffs', $n);
	}

	public static function representingColumn() {
		return 'first_name';
	}

	public function rules() {
		return array(
			array('first_name, last_name, address_id, store_id, username, last_update', 'required'),
			array('address_id, store_id, active', 'numerical', 'integerOnly'=>true),
			array('first_name, last_name', 'length', 'max'=>45),
			array('email', 'length', 'max'=>50),
			array('username', 'length', 'max'=>16),
			array('password', 'length', 'max'=>40),
			array('picture', 'safe'),
			array('picture, email, active, password', 'default', 'setOnEmpty' => true, 'value' => null),
			array('staff_id, first_name, last_name, address_id, picture, email, store_id, active, username, password, last_update', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'payments' => array(self::HAS_MANY, 'Payment', 'staff_id'),
			'rentals' => array(self::HAS_MANY, 'Rental', 'staff_id'),
			'store' => array(self::BELONGS_TO, 'Store', 'store_id'),
			'address' => array(self::BELONGS_TO, 'Address', 'address_id'),
			'stores' => array(self::HAS_MANY, 'Store', 'manager_staff_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'staff_id' => Yii::t('app', 'Staff'),
			'first_name' => Yii::t('app', 'First Name'),
			'last_name' => Yii::t('app', 'Last Name'),
			'address_id' => null,
			'picture' => Yii::t('app', 'Picture'),
			'email' => Yii::t('app', 'Email'),
			'store_id' => null,
			'active' => Yii::t('app', 'Active'),
			'username' => Yii::t('app', 'Username'),
			'password' => Yii::t('app', 'Password'),
			'last_update' => Yii::t('app', 'Last Update'),
			'payments' => null,
			'rentals' => null,
			'store' => null,
			'address' => null,
			'stores' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('staff_id', $this->staff_id);
		$criteria->compare('first_name', $this->first_name, true);
		$criteria->compare('last_name', $this->last_name, true);
		$criteria->compare('address_id', $this->address_id);
		$criteria->compare('picture', $this->picture, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('store_id', $this->store_id);
		$criteria->compare('active', $this->active);
		$criteria->compare('username', $this->username, true);
		$criteria->compare('password', $this->password, true);
		$criteria->compare('last_update', $this->last_update, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}